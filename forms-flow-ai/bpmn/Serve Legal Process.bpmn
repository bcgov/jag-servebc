<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_19mue86" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="4.8.1" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.15.0">
  <bpmn:process id="ServeLegalProcess" name="Serve Legal" isExecutable="true">
    <bpmn:startEvent id="ReceiveDocumentsStartEvent" name="Receive documents">
      <bpmn:extensionElements>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="javascript">var system=java.lang.System;
system.out.println(new Date() + " *********************************************************************************************************************");</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:outgoing>Flow_1teuejl</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="Flow_1teuejl" sourceRef="ReceiveDocumentsStartEvent" targetRef="SyncDataBetweenFormAndBpmTask1" />
    <bpmn:userTask id="DocumentDocumentStatusTask" name="Document - ${documentStatus} - ${staffGroup}" camunda:candidateGroups="/formsflow/formsflow-reviewer/staff" camunda:dueDate="${serveDateInISOFormat}" camunda:followUpDate="${nextApperanceDateInISOFormat}">
      <bpmn:documentation>User task
(1) Create a new form instance to store updates (Listener)
(2) When submitted it set the applicationStatus to the action and deleteReason to completd (Listener)</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="action" label="Action" type="string" />
        </camunda:formData>
        <camunda:taskListener event="complete">
          <camunda:script scriptFormat="javascript">task.execution.setVariable('applicationStatus', 'Submission accessed and modified by Province user');
task.execution.setVariable('deleteReason', "completed");</camunda:script>
        </camunda:taskListener>
        <camunda:inputOutput>
          <camunda:inputParameter name="PartyName">${S(container).prop('partyName')}
</camunda:inputParameter>
        </camunda:inputOutput>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="javascript">var payload = execution.getVariable('container');
var payloadObj = JSON.parse(payload);
var payloadStr = JSON.stringify(payloadObj);
var system = java.lang.System;
system.out.println(" New Request before Document Review Task: - " + payloadStr);</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0cu1ux4</bpmn:incoming>
      <bpmn:incoming>Flow_1q8i6z1</bpmn:incoming>
      <bpmn:incoming>Flow_0sq98vq</bpmn:incoming>
      <bpmn:outgoing>Flow_0yclemw</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:exclusiveGateway id="IsCompleteGateway" name="Is complete?">
      <bpmn:documentation>Check whether form submission (task update) is the complete the form or to update the form.</bpmn:documentation>
      <bpmn:incoming>Flow_06t4qph</bpmn:incoming>
      <bpmn:outgoing>YesSequenceFlow</bpmn:outgoing>
      <bpmn:outgoing>NoSequenceFlow</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:endEvent id="DocumentCompletedEndEvent" name="Document completed">
      <bpmn:incoming>Flow_01og2hy</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="YesSequenceFlow" name="Yes" sourceRef="IsCompleteGateway" targetRef="SaveRequestDataCompletedCallActivity">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${action == "Completed"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="NoSequenceFlow" name="No" sourceRef="IsCompleteGateway" targetRef="SaveRequestDataSaveCallActivity">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${action == "Saved"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:callActivity id="SaveRequestDataInitialCreateCallActivity" name="Save request data (Initial create)" calledElement="SaveRequestDataProcess">
      <bpmn:documentation>(1) Call Subprocess to create document submission in central db
(2) set the http method to be used for API call (Listener)</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:in businessKey="#{execution.processBusinessKey}" />
        <camunda:in variables="all" />
        <camunda:out variables="all" />
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="javascript">execution.setVariable('method','POST');


var system=java.lang.System;
system.out.println(new Date() + " Container :" + container);
</camunda:script>
        </camunda:executionListener>
        <camunda:inputOutput>
          <camunda:inputParameter name="container">
            <camunda:script scriptFormat="javascript">var payload = execution.getVariable('container');
var payloadObj = JSON.parse(payload);
payloadObj.dateSubmitted= new Date(receiveddate).toISOString();

var payloadStr = JSON.stringify(payloadObj);
var system = java.lang.System;
system.out.println("******** Updated Request with dateSubmitted: - " + payloadStr);
payloadStr; </camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0s6di20</bpmn:incoming>
      <bpmn:outgoing>Flow_03b2zks</bpmn:outgoing>
    </bpmn:callActivity>
    <bpmn:callActivity id="SaveRequestDataSaveCallActivity" name="Save request data (save)" calledElement="SaveRequestDataProcess">
      <bpmn:documentation>(1) Call Subprocess to update document submission in central db
(2) set the http method to be used for API call (Listener)</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:in variables="all" />
        <camunda:out variables="all" />
        <camunda:in businessKey="#{execution.processBusinessKey}" />
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="javascript">execution.setVariable('method','PUT');</camunda:script>
        </camunda:executionListener>
        <camunda:executionListener class="org.camunda.bpm.extension.hooks.listeners.FormSubmissionListener" event="start" />
      </bpmn:extensionElements>
      <bpmn:incoming>NoSequenceFlow</bpmn:incoming>
      <bpmn:outgoing>Flow_0cu1ux4</bpmn:outgoing>
    </bpmn:callActivity>
    <bpmn:callActivity id="VerifyServedDateCallActivity" name="Verify served date" calledElement="VerifyServedDateProcess">
      <bpmn:documentation>Call sub process to 
(1) Check the day and time of the day
(2) Send served email if its working and end
(3) If it's not a working time then send Received email
 Calculate earliest next working day and time.
(4) sleep until then and ten send served email</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:in variables="all" />
        <camunda:out variables="all" />
        <camunda:executionListener class="org.camunda.bpm.extension.hooks.listeners.FormSubmissionListener" event="start" />
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1nye5jf</bpmn:incoming>
      <bpmn:outgoing>Flow_16wo4op</bpmn:outgoing>
    </bpmn:callActivity>
    <bpmn:scriptTask id="SyncDataBetweenFormAndBpmTask" name="Sync data between form and bpm" scriptFormat="javascript">
      <bpmn:documentation>This script is used to 

(1) Sync applicaionId and applicationStatus to form (Listener Tab)
(3) Create an audit history entry (Listener Tab)
(4) Sync form data to bpm (Listener Tab)


</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:executionListener class="org.camunda.bpm.extension.hooks.listeners.BPMFormDataPipelineListener" event="start">
          <camunda:field name="fields">
            <camunda:expression>["applicationId","applicationStatus"]</camunda:expression>
          </camunda:field>
        </camunda:executionListener>
        <camunda:executionListener class="org.camunda.bpm.extension.hooks.listeners.ApplicationStateListener" event="start" />
        <camunda:executionListener class="org.camunda.bpm.extension.hooks.listeners.FormBPMDataPipelineListener" event="start" />
        <camunda:executionListener event="end">
          <camunda:script scriptFormat="javascript">//Required for setting Task variable to show in LHS.
var payload = execution.getVariable('container');
var payloadObj = JSON.parse(payload);
var partyName="";
var documentStatus="";
var staffGroup="";
var isCriminal="";
var nextAppearanceDate="";
var documentType="";
var courtOrTribunalFileNbr="";
var nextApperanceDateInISOFormat = null;
var registry = "";
var lawyerName = "";

if (payloadObj.partyName){
partyName=payloadObj.partyName;
}

if(payloadObj.registry)
{
registry = payloadObj.registry;
}

if(payloadObj.lawyerName)
{
lawyerName = payloadObj.lawyerName;
}

if (payloadObj.isCriminal){
isCriminal=(payloadObj.isCriminal).toString();
}
if (payloadObj.courtNumber){
courtOrTribunalFileNbr= payloadObj.courtNumber;
}

if (payloadObj.isCriminal){
isCriminal="Yes";
}
else {
isCriminal="No";
}
if (typeof payloadObj.documentStatus !== "undefined"){
documentStatus=payloadObj.documentStatus;
}
if (typeof payloadObj.staffGroup !== "undefined"){
staffGroup=payloadObj.staffGroup;
}

if (payloadObj.documentType){
documentType=payloadObj.documentType;
}
if (payloadObj.nextAppearanceDate){
nextAppearanceDate= new Date(payloadObj.nextAppearanceDate).toLocaleString();
nextApperanceDateInISOFormat = new Date(payloadObj.nextAppearanceDate).toISOString();
}

execution.setVariable('documentStatus',documentStatus);
execution.setVariable('partyName',partyName);
execution.setVariable('isCriminal',isCriminal);
execution.setVariable('nextAppearanceDate',nextAppearanceDate);
execution.setVariable('staffGroup',staffGroup);
execution.setVariable('documentType',documentType);
execution.setVariable('courtOrTribunalFileNbr',courtOrTribunalFileNbr);
execution.setVariable('nextApperanceDateInISOFormat', nextApperanceDateInISOFormat);
execution.setVariable('registry',registry);
execution.setVariable('lawyerName',lawyerName);</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0yclemw</bpmn:incoming>
      <bpmn:outgoing>Flow_06t4qph</bpmn:outgoing>
      <bpmn:script>//scripting is done using Listeners</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_0s6di20" sourceRef="SyncDataBetweenFormAndBpmTask1" targetRef="SaveRequestDataInitialCreateCallActivity" />
    <bpmn:scriptTask id="SyncDataBetweenFormAndBpmTask1" name="Sync data between form and bpm" camunda:jobPriority="10" scriptFormat="javascript">
      <bpmn:documentation>This script is used to 
(1) Set application status to Received and set environment(General Tab)
(2) Sync applicaionId and applicationStatus to form (Listener Tab)
(3) Create an audit history entry (Listener Tab)
(4) Sync form data to bpm (Listener Tab)


</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:executionListener class="org.camunda.bpm.extension.hooks.listeners.BPMFormDataPipelineListener" event="end">
          <camunda:field name="fields">
            <camunda:expression>["applicationId","applicationStatus"]</camunda:expression>
          </camunda:field>
        </camunda:executionListener>
        <camunda:executionListener class="org.camunda.bpm.extension.hooks.listeners.ApplicationStateListener" event="end" />
        <camunda:executionListener class="org.camunda.bpm.extension.hooks.listeners.FormBPMDataPipelineListener" event="end" />
        <camunda:executionListener event="end">
          <camunda:script scriptFormat="javascript">//Required for setting Task variable to show in LHS. dateSubmitted is set General tab.
var payload = execution.getVariable('container');
var payloadObj = JSON.parse(payload);
var documentStatus="";
var staffGroup="";
var partyName="";
var isCriminal="";
var nextAppearanceDate="";
var documentType="";
var courtOrTribunalFileNbr="";
var serveDateInISOFormat=null;
var nextApperanceDateInISOFormat = null;
var registry = "";
var lawyerName = "";

if (payloadObj.documentStatus){
documentStatus=payloadObj.documentStatus;
}
if (payloadObj.staffGroup){
staffGroup=payloadObj.staffGroup;
}
if (payloadObj.partyName){
partyName=payloadObj.partyName;
}
if (payloadObj.documentStatus){
documentStatusTEST=payloadObj.documentStatus;
}

if(payloadObj.registry)
{
registry = payloadObj.registry;
}

if(payloadObj.lawyerName)
{
lawyerName = payloadObj.lawyerName;
}

if (payloadObj.isCriminal){
isCriminal="Yes";
}
else {
isCriminal="No";
}

if (payloadObj.nextAppearanceDate){
nextAppearanceDate= new Date(payloadObj.nextAppearanceDate).toLocaleString();
nextApperanceDateInISOFormat = new Date(payloadObj.nextAppearanceDate).toISOString();
}

if (payloadObj.documentType){
documentType=payloadObj.documentType;
}

if (payloadObj.courtNumber){
courtOrTribunalFileNbr= payloadObj.courtNumber;
}

//serveDateInISOFormat = new Date().toISOString();


execution.setVariable('documentStatus',documentStatus);
execution.setVariable('staffGroup',staffGroup);
execution.setVariable('partyName',partyName);
execution.setVariable('isCriminal',isCriminal);
execution.setVariable('nextAppearanceDate',nextAppearanceDate);
execution.setVariable('documentType',documentType);
execution.setVariable('courtOrTribunalFileNbr',courtOrTribunalFileNbr);
//execution.setVariable('servedDate', '');
execution.setVariable('serveDateInISOFormat', serveDateInISOFormat);
execution.setVariable('nextApperanceDateInISOFormat', nextApperanceDateInISOFormat);
execution.setVariable('registry',registry);
execution.setVariable('lawyerName',lawyerName);</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1teuejl</bpmn:incoming>
      <bpmn:outgoing>Flow_0s6di20</bpmn:outgoing>
      <bpmn:script>var tmpDate = new Date().toLocaleString();
execution.setVariable('receiveddate',tmpDate );
execution.setVariable('dateSubmitted',tmpDate);
execution.setVariable('applicationStatus','Received - No Served Email sent yet');

var system=java.lang.System;
java.lang.System.out.println( " "+ new Date() + " : NEW SUBMISSION **************************************************************************************************");

</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_0yclemw" sourceRef="DocumentDocumentStatusTask" targetRef="SyncDataBetweenFormAndBpmTask">
      <bpmn:extensionElements>
        <camunda:executionListener event="take">
          <camunda:script scriptFormat="javascript">var system=java.lang.System;
system.out.println(new Date() + "**** After Task Completion formUrl:: " +execution.getVariable('formUrl'));

system.out.println(new Date() + "**** After Task Completion container:: " +execution.getVariable('container'));</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
    </bpmn:sequenceFlow>
    <bpmn:callActivity id="SaveRequestDataCompletedCallActivity" name="Save request data (completed)" calledElement="SaveRequestDataProcess">
      <bpmn:documentation>(1) Call Subprocess to update document submission in central db
(2) set the http method to be used for API call (Listener)</bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:in variables="all" />
        <camunda:out variables="all" />
        <camunda:in businessKey="#{execution.processBusinessKey}" />
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="javascript">execution.setVariable('method','PUT');

</camunda:script>
        </camunda:executionListener>
        <camunda:inputOutput>
          <camunda:inputParameter name="container">
            <camunda:script scriptFormat="javascript">var payload = execution.getVariable('container');
var payloadObj = JSON.parse(payload);
payloadObj.closedDate= new Date().toISOString();

execution.setVariable('closedDate',payloadObj.closedDate)

var payloadStr = JSON.stringify(payloadObj);
var system = java.lang.System;
system.out.println("******** Updated Request with Closed Date: - " + payloadStr);
payloadStr; </camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>YesSequenceFlow</bpmn:incoming>
      <bpmn:outgoing>Flow_01og2hy</bpmn:outgoing>
    </bpmn:callActivity>
    <bpmn:sequenceFlow id="Flow_01og2hy" sourceRef="SaveRequestDataCompletedCallActivity" targetRef="DocumentCompletedEndEvent" />
    <bpmn:sequenceFlow id="Flow_0cu1ux4" sourceRef="SaveRequestDataSaveCallActivity" targetRef="DocumentDocumentStatusTask" />
    <bpmn:sequenceFlow id="Flow_06t4qph" sourceRef="SyncDataBetweenFormAndBpmTask" targetRef="IsCompleteGateway" />
    <bpmn:sequenceFlow id="Flow_03b2zks" sourceRef="SaveRequestDataInitialCreateCallActivity" targetRef="Gateway_0492bpe" />
    <bpmn:parallelGateway id="Gateway_0492bpe" name="Check Served Date in Parallel">
      <bpmn:incoming>Flow_03b2zks</bpmn:incoming>
      <bpmn:outgoing>Flow_1q8i6z1</bpmn:outgoing>
      <bpmn:outgoing>Flow_1nye5jf</bpmn:outgoing>
    </bpmn:parallelGateway>
    <bpmn:sequenceFlow id="Flow_1q8i6z1" sourceRef="Gateway_0492bpe" targetRef="DocumentDocumentStatusTask" />
    <bpmn:sequenceFlow id="Flow_1nye5jf" sourceRef="Gateway_0492bpe" targetRef="VerifyServedDateCallActivity" />
    <bpmn:endEvent id="Event_1skb6ed" name="End After Sending Email">
      <bpmn:incoming>Flow_16wo4op</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_16wo4op" sourceRef="VerifyServedDateCallActivity" targetRef="Event_1skb6ed" />
    <bpmn:boundaryEvent id="Event_0isfk7x" name="Serve Date update notification" attachedToRef="DocumentDocumentStatusTask">
      <bpmn:extensionElements>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="javascript">var system = java.lang.System;
system.out.println(new Date() + "#########Received Signal########");</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:outgoing>Flow_0sq98vq</bpmn:outgoing>
      <bpmn:signalEventDefinition id="SignalEventDefinition_1dzg8vw" signalRef="Signal_1gxsa4x" />
    </bpmn:boundaryEvent>
    <bpmn:sequenceFlow id="Flow_0sq98vq" sourceRef="Event_0isfk7x" targetRef="DocumentDocumentStatusTask" />
  </bpmn:process>
  <bpmn:signal id="Signal_1gxsa4x" name="UpdateServedDate" />
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="ServeLegalProcess">
      <bpmndi:BPMNEdge id="Flow_0sq98vq_di" bpmnElement="Flow_0sq98vq">
        <di:waypoint x="472" y="187" />
        <di:waypoint x="420" y="187" />
        <di:waypoint x="420" y="247" />
        <di:waypoint x="510" y="247" />
        <di:waypoint x="510" y="227" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_16wo4op_di" bpmnElement="Flow_16wo4op">
        <di:waypoint x="720" y="470" />
        <di:waypoint x="792" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1nye5jf_di" bpmnElement="Flow_1nye5jf">
        <di:waypoint x="530" y="365" />
        <di:waypoint x="530" y="470" />
        <di:waypoint x="620" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1q8i6z1_di" bpmnElement="Flow_1q8i6z1">
        <di:waypoint x="530" y="315" />
        <di:waypoint x="530" y="271" />
        <di:waypoint x="540" y="271" />
        <di:waypoint x="540" y="227" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_03b2zks_di" bpmnElement="Flow_03b2zks">
        <di:waypoint x="440" y="330" />
        <di:waypoint x="473" y="330" />
        <di:waypoint x="473" y="340" />
        <di:waypoint x="505" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_06t4qph_di" bpmnElement="Flow_06t4qph">
        <di:waypoint x="800" y="187" />
        <di:waypoint x="828" y="187" />
        <di:waypoint x="828" y="200" />
        <di:waypoint x="855" y="200" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0cu1ux4_di" bpmnElement="Flow_0cu1ux4">
        <di:waypoint x="910" y="80" />
        <di:waypoint x="530" y="80" />
        <di:waypoint x="530" y="147" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_01og2hy_di" bpmnElement="Flow_01og2hy">
        <di:waypoint x="1030" y="330" />
        <di:waypoint x="1150" y="330" />
        <di:waypoint x="1150" y="198" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0yclemw_di" bpmnElement="Flow_0yclemw">
        <di:waypoint x="590" y="187" />
        <di:waypoint x="700" y="187" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0s6di20_di" bpmnElement="Flow_0s6di20">
        <di:waypoint x="330" y="190" />
        <di:waypoint x="400" y="190" />
        <di:waypoint x="400" y="290" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0thd66u_di" bpmnElement="NoSequenceFlow">
        <di:waypoint x="880" y="175" />
        <di:waypoint x="880" y="148" />
        <di:waypoint x="960" y="148" />
        <di:waypoint x="960" y="120" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="882" y="157" width="15" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0wl01e6_di" bpmnElement="YesSequenceFlow">
        <di:waypoint x="880" y="225" />
        <di:waypoint x="880" y="330" />
        <di:waypoint x="930" y="330" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="881" y="303" width="18" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1teuejl_di" bpmnElement="Flow_1teuejl">
        <di:waypoint x="198" y="187" />
        <di:waypoint x="230" y="187" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="149" y="109" width="90" height="20" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="ReceiveDocumentsStartEvent">
        <dc:Bounds x="162" y="169" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="154" y="212" width="54" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1vbalmj_di" bpmnElement="DocumentDocumentStatusTask">
        <dc:Bounds x="490" y="147" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1kvc3fb_di" bpmnElement="IsCompleteGateway" isMarkerVisible="true">
        <dc:Bounds x="855" y="175" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="915" y="193" width="63" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_12frhix_di" bpmnElement="DocumentCompletedEndEvent">
        <dc:Bounds x="1132" y="162" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1124" y="125" width="52" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0axm38a_di" bpmnElement="SaveRequestDataInitialCreateCallActivity">
        <dc:Bounds x="340" y="290" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1d9thxd_di" bpmnElement="SaveRequestDataSaveCallActivity">
        <dc:Bounds x="910" y="40" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1ljytxh_di" bpmnElement="VerifyServedDateCallActivity">
        <dc:Bounds x="620" y="430" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0l9ag1f_di" bpmnElement="SyncDataBetweenFormAndBpmTask">
        <dc:Bounds x="700" y="147" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1j4ov5x_di" bpmnElement="SyncDataBetweenFormAndBpmTask1">
        <dc:Bounds x="230" y="147" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_15wcxhj_di" bpmnElement="SaveRequestDataCompletedCallActivity">
        <dc:Bounds x="930" y="290" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0dc1lws_di" bpmnElement="Gateway_0492bpe">
        <dc:Bounds x="505" y="315" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="542" y="356" width="75" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1skb6ed_di" bpmnElement="Event_1skb6ed">
        <dc:Bounds x="792" y="452" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="767" y="495" width="90" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0zunsnq_di" bpmnElement="Event_0isfk7x">
        <dc:Bounds x="472" y="169" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="447" y="212" width="90" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
